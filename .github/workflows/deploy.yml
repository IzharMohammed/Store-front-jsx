name: Build and Deploy to Docker Hub

# Trigger the workflow on push to main branch
on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Check Out Repo
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx for advanced build features
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Authenticate with Docker Hub using secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build the Docker image and push to Docker Hub
      - name: Build and push Storefront Image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is current directory
          file: Dockerfile # Dockerfile location
          push: true # Push image to registry
          tags: |
            izhardev/storefront:latest  # Tag the image

      # Step 5: Verify the image was pushed successfully
      - name: Verify Storefront Image
        run: |
          echo "Verifying storefront image..."
          docker pull izhardev/storefront:latest
          docker images | grep storefront

      # Step 6: Deploy to VM via SSH
      - name: Deploy to VM via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Pull the latest storefront image
            sudo docker pull izhardev/storefront:latest

            # Stop existing container (ignore error if not running)
            sudo docker stop storefront || true

            # Remove existing container (ignore error if doesn't exist)
            sudo docker rm storefront || true

            # Clean up unused Docker images to save space
            sudo docker image prune -f

            # Run the new container with proper configuration
            sudo docker run -d \
              --name storefront \
              -p 3000:3000 \
              -e BACKEND_URL=${{ secrets.BACKEND_URL }} \
              -e BACKEND_API_KEY=${{ secrets.BACKEND_API_KEY }} \
              --restart unless-stopped \
              izhardev/storefront:latest
              
            # Verify the container is running
            sudo docker ps | grep storefront
